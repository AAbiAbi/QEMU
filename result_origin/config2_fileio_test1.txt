sysbench 1.0.18 (using system LuaJIT 2.1.0-beta3)

128 files, 16384Kb each, 2048Mb total
Creating files for the test...
Extra file open flags: (none)
Reusing existing file test_file.0
Reusing existing file test_file.1
Reusing existing file test_file.2
Reusing existing file test_file.3
Reusing existing file test_file.4
Reusing existing file test_file.5
Reusing existing file test_file.6
Reusing existing file test_file.7
Reusing existing file test_file.8
Reusing existing file test_file.9
Reusing existing file test_file.10
Reusing existing file test_file.11
Reusing existing file test_file.12
Reusing existing file test_file.13
Reusing existing file test_file.14
Reusing existing file test_file.15
Reusing existing file test_file.16
Reusing existing file test_file.17
Reusing existing file test_file.18
Reusing existing file test_file.19
Reusing existing file test_file.20
Reusing existing file test_file.21
Reusing existing file test_file.22
Reusing existing file test_file.23
Reusing existing file test_file.24
Reusing existing file test_file.25
Reusing existing file test_file.26
Reusing existing file test_file.27
Reusing existing file test_file.28
Reusing existing file test_file.29
Reusing existing file test_file.30
Reusing existing file test_file.31
Reusing existing file test_file.32
Reusing existing file test_file.33
Reusing existing file test_file.34
Reusing existing file test_file.35
Reusing existing file test_file.36
Reusing existing file test_file.37
Reusing existing file test_file.38
Reusing existing file test_file.39
Reusing existing file test_file.40
Reusing existing file test_file.41
Reusing existing file test_file.42
Reusing existing file test_file.43
Reusing existing file test_file.44
Reusing existing file test_file.45
Reusing existing file test_file.46
Reusing existing file test_file.47
Reusing existing file test_file.48
Reusing existing file test_file.49
Reusing existing file test_file.50
Reusing existing file test_file.51
Reusing existing file test_file.52
Reusing existing file test_file.53
Reusing existing file test_file.54
Reusing existing file test_file.55
Reusing existing file test_file.56
Reusing existing file test_file.57
Reusing existing file test_file.58
Reusing existing file test_file.59
Reusing existing file test_file.60
Reusing existing file test_file.61
Reusing existing file test_file.62
Reusing existing file test_file.63
Reusing existing file test_file.64
Reusing existing file test_file.65
Reusing existing file test_file.66
Reusing existing file test_file.67
Reusing existing file test_file.68
Reusing existing file test_file.69
Reusing existing file test_file.70
Reusing existing file test_file.71
Reusing existing file test_file.72
Reusing existing file test_file.73
Reusing existing file test_file.74
Reusing existing file test_file.75
Reusing existing file test_file.76
Reusing existing file test_file.77
Reusing existing file test_file.78
Reusing existing file test_file.79
Reusing existing file test_file.80
Reusing existing file test_file.81
Reusing existing file test_file.82
Reusing existing file test_file.83
Reusing existing file test_file.84
Reusing existing file test_file.85
Reusing existing file test_file.86
Reusing existing file test_file.87
Reusing existing file test_file.88
Reusing existing file test_file.89
Reusing existing file test_file.90
Reusing existing file test_file.91
Reusing existing file test_file.92
Reusing existing file test_file.93
Reusing existing file test_file.94
Reusing existing file test_file.95
Reusing existing file test_file.96
Reusing existing file test_file.97
Reusing existing file test_file.98
Reusing existing file test_file.99
Reusing existing file test_file.100
Reusing existing file test_file.101
Reusing existing file test_file.102
Reusing existing file test_file.103
Reusing existing file test_file.104
Reusing existing file test_file.105
Reusing existing file test_file.106
Reusing existing file test_file.107
Reusing existing file test_file.108
Reusing existing file test_file.109
Reusing existing file test_file.110
Reusing existing file test_file.111
Reusing existing file test_file.112
Reusing existing file test_file.113
Reusing existing file test_file.114
Reusing existing file test_file.115
Reusing existing file test_file.116
Reusing existing file test_file.117
Reusing existing file test_file.118
Reusing existing file test_file.119
Reusing existing file test_file.120
Reusing existing file test_file.121
Reusing existing file test_file.122
Reusing existing file test_file.123
Reusing existing file test_file.124
Reusing existing file test_file.125
Reusing existing file test_file.126
Reusing existing file test_file.127
No bytes written.
sysbench 1.0.18 (using system LuaJIT 2.1.0-beta3)

Running the test with following options:
Number of threads: 1
Initializing random number generator from current time


Extra file open flags: (none)
128 files, 16MiB each
2GiB total file size
Block size 16KiB
Number of IO requests: 0
Read/Write ratio for combined random IO test: 1.50
Periodic FSYNC enabled, calling fsync() each 100 requests.
Calling fsync() at the end of test, Enabled.
Using synchronous I/O mode
Doing random r/w test
Initializing worker threads...

Threads started!


File operations:
    reads/s:                      4094.79
    writes/s:                     2729.86
    fsyncs/s:                     8743.75

Throughput:
    read, MiB/s:                  63.98
    written, MiB/s:               42.65

General statistics:
    total time:                          10.0073s
    total number of events:              155678

Latency (ms):
         min:                                    0.00
         avg:                                    0.06
         max:                                    7.29
         95th percentile:                        0.17
         sum:                                 9967.88

Threads fairness:
    events (avg/stddev):           155678.0000/0.00
    execution time (avg/stddev):   9.9679/0.00


Threads started!


File operations:
    reads/s:                      3210.60
    writes/s:                     2140.34
    fsyncs/s:                     6850.99

Throughput:
    read, MiB/s:                  50.17
    written, MiB/s:               33.44

General statistics:
    total time:                          10.0137s
    total number of events:              122066

Latency (ms):
         min:                                    0.00
         avg:                                    0.08
         max:                                   12.04
         95th percentile:                        0.22
         sum:                                 9963.54

Threads fairness:
    events (avg/stddev):           122066.0000/0.00
    execution time (avg/stddev):   9.9635/0.00

Initializing worker threads...

Threads started!


File operations:
    reads/s:                      3796.24
    writes/s:                     2530.82
    fsyncs/s:                     8110.13

Throughput:
    read, MiB/s:                  59.32
    written, MiB/s:               39.54

General statistics:
    total time:                          10.0041s
    total number of events:              144311

Latency (ms):
         min:                                    0.00
         avg:                                    0.07
         max:                                    7.57
         95th percentile:                        0.19
         sum:                                 9968.59

Threads fairness:
    events (avg/stddev):           144311.0000/0.00
    execution time (avg/stddev):   9.9686/0.00

Initializing worker threads...

Threads started!


File operations:
    reads/s:                      3937.41
    writes/s:                     2624.94
    fsyncs/s:                     8400.91

Throughput:
    read, MiB/s:                  61.52
    written, MiB/s:               41.01

General statistics:
    total time:                          10.0101s
    total number of events:              149679

Latency (ms):
         min:                                    0.00
         avg:                                    0.07
         max:                                    8.14
         95th percentile:                        0.19
         sum:                                 9966.24

Threads fairness:
    events (avg/stddev):           149679.0000/0.00
    execution time (avg/stddev):   9.9662/0.00

Initializing worker threads...

Threads started!


File operations:
    reads/s:                      4030.54
    writes/s:                     2686.96
    fsyncs/s:                     8609.15

Throughput:
    read, MiB/s:                  62.98
    written, MiB/s:               41.98

General statistics:
    total time:                          10.0055s
    total number of events:              153232

Latency (ms):
         min:                                    0.00
         avg:                                    0.07
         max:                                    7.54
         95th percentile:                        0.19
         sum:                                 9965.82

Threads fairness:
    events (avg/stddev):           153232.0000/0.00
    execution time (avg/stddev):   9.9658/0.00